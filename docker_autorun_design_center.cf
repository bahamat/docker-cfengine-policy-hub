bundle agent autorun_design_center
{
  meta:
    am_policy_hub::
      "tags" slist => { "autorun" };

  classes:
    community_edition::
      "have_activation_$(activations)" expression => "any";
      "have_local_sketches" expression => fileexists($(local_sketch_index));
      "have_vardata_file" expression => fileexists($(vardata_file));
      "have_vardata" expression => isvariable(vardata);

  vars:
    community_edition::
      "local_sketch_index" string => "$(sys.workdir)/design-center/sketches/cfsketches.json";
      "pfile" string => "$(this.promise_filename).json";
      "params" data => readjson($(pfile), 100k);

      "sketches" slist => getindices(params);
      "csketches[$(sketches)]" string => canonify($(sketches));

      "vardata_file" string => "$(sys.masterdir)/sketches/meta/vardata.conf";

    have_vardata_file::
      "vardata" data => readjson($(vardata_file), 100k);
    have_vardata::
      "activations" slist => getindices("vardata[activations]");

  commands:
    community_edition::
      "$(sys.workdir)/design-center/bin/cf-sketch --expert --install $(sketches)"
      ifvarclass => "!have_activation_$(csketches[$(sketches)]).!have_local_sketches";

      "$(sys.workdir)/design-center/bin/cf-sketch --expert --installsource $(local_sketch_index) --install $(sketches)"
      ifvarclass => "!have_activation_$(csketches[$(sketches)]).have_local_sketches";

      "$(sys.workdir)/design-center/bin/cf-sketch --expert --activate $(sketches)=$(pfile) --generate"
      ifvarclass => "!have_activation_$(csketches[$(sketches)])";

  reports:
    inform_mode::
      "$(this.bundle): running";
    !community_edition::
      "Please use the Enterprise Mission Portal to manage Design Center sketches.  This bundle will install in $(sys.masterdir) which in CFEngine Enterprise gets overwritten from your version control repository.";
}
